{
  "name": "object",
  "description": "Chi for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/chi.git"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "in1": {
            "title": "Input",
            "type": "any"
          },
          "in2": {
            "title": "Input",
            "type": "any"
          },
          "color": {
            "title": "Color",
            "type": "string"
          }
        },
        "output": {
          "out1": {
            "title": "Out 1",
            "type": "any"
          },
          "out2": {
            "title": "Out 2",
            "type": "any"
          }
        }
      },
      "expose": [
        "chi",
        "self"
      ],
      "phrases": {
        "active": "Collecting"
      },
      "type": "async",
      "description": "Collect Chi 2",
      "ns": "chi",
      "name": "collect2",
      "fn": "on.input.in1 = function() {\n\n  if(!state[chi.id]) state[chi.id] = {};\n\n  state[chi.id]['out1'] = chi.read(state.color, self);\n\n  if(Object.keys(state[chi.id]) === 2) {\n\n    // send them out in correct pairs.\n    output(state[chi.id]);\n\n    delete state[chi.id];\n  }\n}\n\non.input.in2 = function() {\n\n  if(!state[chi.id]) state[chi.id] = {};\n\n  state[chi.id]['out2'] = chi.read(state.color, self);\n\n  if(Object.keys(state[chi.id]) === 2) {\n\n    // send them out in correct pairs.\n    output(state[chi.id]);\n\n    delete state[chi.id];\n  }\n}\n\non.input.color = function() {\n  // TODO: I want this logic just be handled the\n  // default way and not having to define this.\n  // problem is that context doesn't work now\n  // and persist is irrelevant now btw.\n  // since we keep our own state\n  state['color'] = data;\n\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Input",
            "type": "any"
          },
          "color": {
            "title": "Color",
            "type": "any"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "any"
          }
        }
      },
      "expose": [
        "chi",
        "self"
      ],
      "phrases": {
        "active": "Creating Chi"
      },
      "description": "Creates Chi",
      "ns": "chi",
      "name": "create",
      "fn": "chi.create(input.color, input.in, self);\noutput.out = input.in;\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Input",
            "type": "any"
          },
          "color": {
            "title": "Color",
            "type": "string"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "any"
          }
        }
      },
      "expose": [
        "chi",
        "self"
      ],
      "phrases": {
        "active": "Dropping {{input.color}} Chi"
      },
      "description": "Drop Chi",
      "ns": "chi",
      "name": "drop",
      "fn": "// for now, input is disregarded\noutput.out = chi.drop(input.color, self);\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Input",
            "type": "any"
          },
          "color": {
            "title": "Color",
            "type": "string"
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "any"
          }
        }
      },
      "expose": [
        "chi",
        "self"
      ],
      "phrases": {
        "active": "Reading Chi"
      },
      "description": "Read Chi",
      "ns": "chi",
      "name": "read",
      "fn": "// for now, input is disregarded\noutput.out = chi.read(input.color, self);\n"
    }
  ],
  "twigs": []
}